"use strict";(self.webpackChunkhtg=self.webpackChunkhtg||[]).push([[2728],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),d=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=d(e.components);return a.createElement(l.Provider,{value:t},e.children)},h="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),h=d(n),c=r,m=h["".concat(l,".").concat(c)]||h[c]||p[c]||i;return n?a.createElement(m,s(s({ref:t},u),{},{components:n})):a.createElement(m,s({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=c;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[h]="string"==typeof e?e:r,s[1]=o;for(var d=2;d<i;d++)s[d]=n[d];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},63130:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var a=n(87462),r=(n(67294),n(3905));const i={},s="Configuring Tender Types",o={unversionedId:"POS and Store/htg_tender",id:"POS and Store/htg_tender",title:"Configuring Tender Types",description:"The purpose of this guide is to show how to configure Tender Types (i.e.",source:"@site/docs/04- POS and Store/htg_tender.md",sourceDirName:"04- POS and Store",slug:"/POS and Store/htg_tender",permalink:"/docs/POS and Store/htg_tender",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/04- POS and Store/htg_tender.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Configuring a New Store",permalink:"/docs/POS and Store/htg_store"},next:{title:"Configuring Users, User Templates and Roles",permalink:"/docs/POS and Store/htg_user_role"}},l={},d=[{value:"Overview",id:"overview",level:2},{value:"Resources",id:"resources",level:2},{value:"Prior Training/Experience",id:"prior-trainingexperience",level:2},{value:"General Tender Configuration",id:"general-tender-configuration",level:2},{value:"General Tab",id:"general-tab",level:2},{value:"Restrictions 1 Tab",id:"restrictions-1-tab",level:2},{value:"Restrictions 2 Tab",id:"restrictions-2-tab",level:2},{value:"Discount Restrictions Tab",id:"discount-restrictions-tab",level:2},{value:"Overlap Tenders",id:"overlap-tenders",level:2},{value:"User Limits",id:"user-limits",level:2},{value:"Cash Management Tab",id:"cash-management-tab",level:2},{value:"Change Tab",id:"change-tab",level:2},{value:"Surcharge Tab",id:"surcharge-tab",level:2},{value:"Attributes Tab",id:"attributes-tab",level:2},{value:"Tender Specific Configurations",id:"tender-specific-configurations",level:2},{value:"Cash Tender",id:"cash-tender",level:3},{value:"Card Tender",id:"card-tender",level:3},{value:"Cheque Tender",id:"cheque-tender",level:3}],u={toc:d},h="wrapper";function p(e){let{components:t,...i}=e;return(0,r.kt)(h,(0,a.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"configuring-tender-types"},"Configuring Tender Types"),(0,r.kt)("h1",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"The purpose of this guide is to show how to configure Tender Types (i.e.\nPayment Methods) on the Enactor Estate Manager and POS."),(0,r.kt)("p",null,"Tender Type configuration is used to set up the behaviours and business\nrules for how different payment methods will operate at the Point of\nSale, and in the Back Office (Store Server or Estate Manager)."),(0,r.kt)("p",null,"Most of the Tender settings are common to all the various tender types.\nHowever some tender types (e.g. Cash) have additional settings. This\nguide will cover these at the end."),(0,r.kt)("p",null,"Dependent on the tender type, there may be other entities that also need\nto be set up. These are covered in other specific guides (e.g. Card\nPayments, Gift Cards,"),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"This guide will cover the Tender Type configuration settings, covering\neach tab of the Tender maintenance utility in the Estate Manager:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"General")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Restrictions 1")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Restrictions 2")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Discount Restrictions")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Overlap Tenders")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"User Limits")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Cash Management")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Change")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Surcharge")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Attributes"))),(0,r.kt)("p",null,"It will then cover the specific settings for the following main tender\ntypes:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Cash Tender")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Card Tender")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Cheque Tender\nn a"))),(0,r.kt)("h1",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("h2",{id:"resources"},"Resources"),(0,r.kt)("p",null,"Before starting, you should have the following resources in place:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Enactor Estate Manager")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Enactor POS (configured within the UK Region, connected to the\nEstate Manager)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Standard Configuration, including:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Base Configuration")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"UK Retail (I have used UK in this example, but it could be other\nregional config packs)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Retail Segment pack (I have used UK Fashion here)."))))),(0,r.kt)("h2",{id:"prior-trainingexperience"},"Prior Training/Experience"),(0,r.kt)("p",null,"You should be familiar with the following:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Estate Manager configuration")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Enactor configuration concepts, including Locations, POS Terminals\netc.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Data broadcasting")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Standard POS Sales processes"))),(0,r.kt)("p",null,"If necessary, please revise the appropriate how-to guides on these\nconcepts before starting the Email Receipt configuration process."),(0,r.kt)("h1",{id:"configuration-steps"},"Configuration Steps"),(0,r.kt)("h2",{id:"general-tender-configuration"},"General Tender Configuration"),(0,r.kt)("p",null,"To access the Tender Maintenance utility in the Estate Manager, navigate\nto ",(0,r.kt)("em",{parentName:"p"},"Configuration -- Financial --")," Tenders or search for Tenders."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Graphical user interface, table Description automatically generated",src:n(3231).Z,width:"2820",height:"1290"})),(0,r.kt)("p",null,"Initially you will be presented with the normal selection screen."),(0,r.kt)("p",null,"When you create a new tender, you will be asked to provide a Region, a\nTender Type and a Tender ID:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Graphical user interface, application Description automatically generated",src:n(25037).Z,width:"1466",height:"634"})),(0,r.kt)("p",null,"Tenders are normally managed regionally (e.g. by country) as currency\nand other local compliance rules often need to be applied. For the\npurposes of this document we will be setting up tenders for the United\nKingdom region. Tenders configured at a higher region in the hierarchy\nwill be available to stores in lower-level regions."),(0,r.kt)("p",null,"Tender Type sets up the basic rules for the Tender (e.g. Cash, Card,\nCheque, Gift Card). A retailer may use multiple Cash Tenders, for\nexample: if the retailer accepts GBP cash, plus two other currencies,\nthey would have three cash tenders in total. If in doubt, the Cash\ntender tends to be the simplest, so should be the base Tender type used\nif it is not obvious."),(0,r.kt)("p",null,"Once the basic details have been entered (Or if you are editing an\nexisting Tender Type), the full set of Tabs is displayed:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Graphical user interface, text, application, email, website Description automatically generated",src:n(98288).Z,width:"2440",height:"1010"})),(0,r.kt)("p",null,"We will now start configuring the key elements on each Tab:"),(0,r.kt)("h2",{id:"general-tab"},"General Tab"),(0,r.kt)("p",null,"This is used for the main information and settings for the tender type."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description"),": this will appear on screen and on the customer's\nreceipt to describe the payment method. Different descriptions can be\nset for each language."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Currency"),": this is the currency applied for the tender type. If this\nis different from the Store currency, then an exchange translation will\nbe applied."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Maximum Tenders"),": if used, this will restrict how many payments for\nthis tender type can be used in a transaction. It is only normally only\nused for Card Tenders (where the acquirer may limit to e.g. 3 tenders\nper transaction)."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Open Drawer (At end)"),': this is used to fire the cash drawer when the\ntender is taken. It is used for cash and other tenders that need to be\nstored securely. If the "Open Drawer at end" option is used, the drawer\nwill only fire once the transaction has been fully tendered.'),(0,r.kt)("p",null,"The remaining settings are less frequently used. The Capture Name &\nAddress and reference number number settings can be used if additional\ndata capture is required. The franking rules are used for documents that\nneed to be printed (e.g. cheques) which is rarely used today."),(0,r.kt)("h2",{id:"restrictions-1-tab"},"Restrictions 1 Tab"),(0,r.kt)("p",null,"This tab holds the main restrictions for how the tender type may be used\nfor payments and refunds."),(0,r.kt)("p",null,'Note: there are references to "Debits" and "Credits". In this context,\n"Debit" means accepting a payment from a customer (e.g. a sale) and\n"Credit" means paying money to a customer (e.g. a refund).'),(0,r.kt)("p",null,"For Debits and Credits, there are settings as follows:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Debits/Credits allowed"),": this indicates that the tender type may be\nused for both debits and credits. For example, some tenders may not be\nused for making payments out (Credits)."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Debit/Credit tendering restrictions"),": this is a very key setting. It\nindicates how the tender type may be used in relation to the balance of\nthe transaction (by ",(0,r.kt)("strong",{parentName:"p"},"balance")," we mean the remaining transaction value\nto be paid/refunded):"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"None -- there are no restrictions; the tender may be used for part\nof the transaction balance, for the full balance, or for more than\nthe balance (e.g. Cash, where the customer may pay more than the\nbalance of the transaction, and receive change in return).")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Amount less than or equal to balance -- the tender may only be used\nup to the transaction balance, not exceeding it.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Amount must equal balance -- cannot be used for over tendering or\nunder tendering")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Amount less than next currency unit -- rarely used")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Amount must equal transaction total - cannot be used for over\ntendering or under tendering, and must be the tender used for the\nentire transaction."))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Debit/Credit Limit")," -- this is the maximum and value that can be used\nfor this tender. It may be overridden by using User Limits (See below)."),(0,r.kt)("p",null,"The remaining rules apply irrespective of debit/credit."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Aggregate Limits")," -- indicates that where there are multiple tenders\nfor the same tender type on the transaction, they should be added\ntogether to check whether the maximum value limit is reached."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Minimum Limit")," -- a minimum value for the tender. Rarely used."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Force Amount Entered/Prompt with Amount Due/Force Amount Due"),": these\nsettings are used to control whether/how the POS prompts the user to\nenter the value to be used for the tender:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Force Amount entered: the user must enter a value.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Prompt with amount due: the POS will prompt the user to enter an\namount (and pre-fill the field with the remaining transaction\nbalance).")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Force Amount Due: the POS will automatically apply the tender to the\nremaining balance due and the user will not be able to change the\namount (unless they enter it manually before choosing the tender)."))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Minimum Transaction value")," -- only allows use of the tender if the\ntransaction is over a certain value."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Transaction Tender Limit")," -- this is used normally for enforcing\nmoney laundering rules. Any tenders with this flag set are added\ntogether, and if the total exceeds the Transaction Tender Limit value\n(Set on the POS Terminal -- Tendering tab), then there is an alert and\nan authorised user needs to complete the transaction. Only normally used\nin retailers with very high transaction values."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Enable Promotion Check")," -- this allows the POS to check whether the\ntender type is included in any promotion rules. If tender-based\npromotions are not used, it should be disabled as it will avoid\nunnecessary checks."),(0,r.kt)("p",null,"The rounding rules and minimum denomination rules are required for\njurisdictions (e.g. Belgium, Sweden) where some small-value Denominations are not accepted. For example for Belgium the smallest\naccepted cash denomination is 5 cents. Debit/Credit payments should be\nset to be rounded up/down (according to the applicable rules) as\nrequired."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Tax refund eligible")," -- indicates that if this payment is used, and\nthe transaction meets the other requirements, the customer will be\noffered the opportuinity to receive a tax (e.g. VAT) refund."),(0,r.kt)("h2",{id:"restrictions-2-tab"},"Restrictions 2 Tab"),(0,r.kt)("p",null,"There are two key settings on this tab:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Debit/Credit effect on Loyalty Points"),': this allows the application\nto give additional/remove points for payments (or part payments) using\nthis tender. For example, you might set the Loyalty redemption tender so\nthat it removes loyalty points from the transaction. This will avoid the\npossibility of customers "doubling up" on points when spending their\nredemption. Use of this will depend on the Loyalty programme policies.'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Return Tenders"),": this is used to control which tender type(s) may be\nused when refunding transactions that were paid for with this tender.\nFor example, when configuring the Cash tender, the retailer may choose\nto allow refunds in Cash, via Credit Note or Gift Card. When more than\none possible return tender is used, the order may be altered using the\narrows:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Table Description automatically generated",src:n(10347).Z,width:"1482",height:"444"})),(0,r.kt)("p",null,"If no return tenders are configured, then the full list of tenders for\nthe region will be offered to the user for a with-receipt return."),(0,r.kt)("p",null,"Note that these rules may be overridden dependent on the return reason\ncode used, and the user may have privileges that allow then to skip the\nrefund tender list and choose their own."),(0,r.kt)("h2",{id:"discount-restrictions-tab"},"Discount Restrictions Tab"),(0,r.kt)("p",null,"The settings on this tab may be used to disallow the use of the tender\ntype if there are manual or automated promotional discounts from applied\nto the transaction."),(0,r.kt)("p",null,"The disallow all discounts/disallow all promotions checkboxes will\nprevent the use of the tender for manual/automated discounts\nrespectively."),(0,r.kt)("p",null,'The drop downs may be used to select authorisation codes that will\nprovide the user with the authority to override the tender prevention\n(for details on authorisation codes, refer to the "How to Configure\nUsers, User Roles and User Templates" document.'),(0,r.kt)("h2",{id:"overlap-tenders"},"Overlap Tenders"),(0,r.kt)("p",null,"This is used to allow/disallow the use of certain combinations of tender\ntypes within a single transaction. For example, the retailer may wish to\nprevent the use of multiple Payment Card tenders within a single\ntransaction. These settings tend to be used only rarely in production\nenvironments."),(0,r.kt)("p",null,"Any overlap tenders added to the list will then be allowed should the\nuser select them, having already added at least one instance of the\ncurrent tender type to the transaction."),(0,r.kt)("p",null,"A function authorisation code may be assigned to allow users who have\nthat privilege to override the overlap rule if required."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Note"),": if no overlap tenders are maintained (which is the default)\nthen all tenders are allowed to be overlapped with each other."),(0,r.kt)("h2",{id:"user-limits"},"User Limits"),(0,r.kt)("p",null,"The user limits tabs allow use of Function Authorisation codes to set up\nuser levels with different value limits for payments (Debits) and\nrefunds (Credits)."),(0,r.kt)("p",null,'For example, a retailer may wish to allow most shopfloor users to accept\ncash up to a value of \xa310,000. Only "High Value Team" users with a\nspecial Function Authorisation code will be allowed to accept cash\nvalues above that limit.'),(0,r.kt)("p",null,"This would be set up with rules similar to the below:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Graphical user interface, application, table Description automatically generated",src:n(34660).Z,width:"2244",height:"632"})),(0,r.kt)("p",null,'Most users will have the "Salesperson" Function authorisation code\nassigned, so they can take cash payments up to \xa310,000; members of the\n"High Value Transaction" team will be able to take cash payments up to\n\xa39,999,999.'),(0,r.kt)("p",null,"By setting Credit limits, refunds can be controlled in a similar way."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Note"),': if you set any rules for Tender User limits, then all users\nmust have an authorisation code that is included on the list. If they do\nnot, they will be unable to take payment/refund with that tender at all.\nTender User Limits will override the values set in the "Restrictions 1"\ntab.'),(0,r.kt)("h2",{id:"cash-management-tab"},"Cash Management Tab"),(0,r.kt)("p",null,'The detailed information on how to configure Cash Management is covered\nin the guide "How to configure Terminal Cash up and Empty".'),(0,r.kt)("p",null,"Here we will cover the key settings included on the Cash Management tab\nfor the tender. Most of the settings are checkboxes that indicate\nwhether the tender type should be included in the specified cash\nmanagement processes:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Banking Tender")," -- indicates that the tender type should be included\nwhen transferring cash to bank. This would be true for tenders such as\ncash, payment cards and cheques; it would be false for internal tenders\nsuch as Gift Cards."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Auto Banked")," -- this means the tender will be automatically\nconsidered to be banked as soon as it is processed. This is used for\nelectronic tenders such as payment cards"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Include in Safe Limit Check")," -- Store safes may have an insured value\nlimit applied. If this flag is ticked, then this tender is considered to\nbe part of that limit. Should be enabled for all public tenders such as\ncash etc."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Cashup Tender")," -- this tender type is included in cash up (Counting\nand reconciliation) processes."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Currency Purchase Tender")," - indicates that the tender type should be\nincluded when transferring cash from bank to the store."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Float Tender")," -- this tender type is included in float activities\n(transferring funds from safe to cashdrawer). Used for tenders that form\npart of the cashdrawer float, usually just cash."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Pickup Tender")," -- this tender type is included in pickup activities\n(transferring funds from cashdrawer to safe)."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Auto Picked Up")," - this means the tender will be automatically\nconsidered to be picked up as soon as it is captured at the POS."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Spot Check Tender")," -- this tender type is included in spot checks (ad\nhoc checks to compare the cash drawer/safe total with the system total)."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Enter by Quantity"),' -- when counting this tender, the values are\nentered as quantities rather than the financial value; normally used in\ncombination with "Enter by Denomination" below.'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Enter by Denomination")," -- when counting this tender, values are\nentered for each denomination for the currency. This simplifies counting\nof funds such as cash where many denominations may be held in the\ncashdrawer."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Allow Negative Cashup Value")," -- negative cashup values are usually\nonly applicable for electronic tenders issued at the POS, e.g. Credit\nNotes; normally disallowed."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Tracked Item")," -- indicates that each of these items is individually\ntracked (e.g. Gift Vouchers). When cashed up, these items will be\nchecked off individually."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Safe/Terminal Discrepancy Thresholds")," -- if set, the cashup process\nwill check any discrepancy value (difference between counted and\nexpected values) against the threshold limit; if the discrepancy exceeds\nthe threshold, the user will be alerted, and either a recount will be\nrequired, or a privileged user may override the alert."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Maximum Amount")," - limits the amount that may be entered for the value\nof this Tender in Cash Management operations."),(0,r.kt)("h2",{id:"change-tab"},"Change Tab"),(0,r.kt)("p",null,"Change settings are used to control whether/how change may be returned\nto the customer when they pay more than the transaction balance with\nthis tender type."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Assign Change to Over Payment"),' -- if this flag is set, then no change\nwill be returned to the customer. Any excess payment by the customer\nwill be treated as an "over payment" so will be retained by the\nretailer. If desired, a reason code may be assigned so that the over\npayment can be treated appropriately by external systems (e.g. to credit\nthe payment to an appropriate GL account). If "over payment" is set then\nthe other Change Tender settings will be disabled.'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Change Tender")," -- if set, this will return any change in the selected\ntender. For example, we may accept payment by a foreign currency tender,\nbut change is always given using the main cash tender. If not set,\nchange is returned in the same tender type as the payment."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Change Limit")," -- this sets the maximum value of change that may be\nreturned. For example, a maximum change value of \xa35.00 might be set for\nGift Voucher tenders."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Change Minimum Limit")," -- this sets the minimum value of change to be\nreturned."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Secondary Change Tender --")," if the calculated change value exceeds\nthe maximum/is lower than the minimum limit set for the tender, then a\nsecondary change tender will be applied. For example, using the Gift\nVoucher tender that is set to return a maximum value of \xa35.00 in cash,\nif more than \xa35.00 change is due, this may be set to be returned using a\nGift Card tender."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Secondary Change/Minimum Change Limits")," -- as for the primary limits\nabove. If the change is outside these limits too, then any remaining\nexcess would be treated as overpayment."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Credit Change Tender")," -- this sets the tender type to be used if\nChange is given on refunds (credits). This is rarely used."),(0,r.kt)("h2",{id:"surcharge-tab"},"Surcharge Tab"),(0,r.kt)("p",null,"This is used to configure a surcharge to be applied on the transaction\nif this payment is used. The surcharge may be a fixed fee or a % of the\ntender value. The surcharge may be applied only on tenders over a\nminimum/up to a maximum value."),(0,r.kt)("p",null,"This setting is rarely used."),(0,r.kt)("h2",{id:"attributes-tab"},"Attributes Tab"),(0,r.kt)("p",null,"Attributes are freeform data values that may be freely assigned to the\nTender type. Attribute data structures may be configured using the\nAttribute/Option Set configuration utility."),(0,r.kt)("p",null,"Once the data structure(s) have been configured, data component(s) may\nthen be configured for the chosen tender type."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Graphical user interface, application Description automatically generated",src:n(14589).Z,width:"2548",height:"680"})),(0,r.kt)("p",null,"Attribute data has no impact on standard Enactor functionality."),(0,r.kt)("p",null,"However, the data can be included on the transaction data that is\nexported from the Estate Manager. This data can then be used by external\napplications."),(0,r.kt)("h2",{id:"tender-specific-configurations"},"Tender Specific Configurations"),(0,r.kt)("p",null,"Some tender types have specific data components. The key ones are\nprovided below:"),(0,r.kt)("h3",{id:"cash-tender"},"Cash Tender"),(0,r.kt)("p",null,"This has one data element -- Drawer Limit. This specifies the maximum\nvalue of this tender that is expected to be held in shopfloor cash\ndrawers."),(0,r.kt)("p",null,"If this value is exceeded on a POS, then the users will receive alerts.\nThe user may then ignore that alert and carry on taking sales, but the\nalert will return every few minutes, until a Pickup is carried out. Once\nthe Pickup has been completed and the cash drawer total has been reduced\nto below the limit, the alerts will stop."),(0,r.kt)("h3",{id:"card-tender"},"Card Tender"),(0,r.kt)("p",null,"These settings are specific to Payment Card Tenders:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Graphical user interface, text, application Description automatically generated",src:n(9594).Z,width:"2468",height:"706"})),(0,r.kt)("p",null,"If Cashback is allowed, the cashback tender (usually local cash) is\nconfigured here."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Disable Card Validation")," -- if set, no card validation will be\ncarried out. Rarely used."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Print Separate Customer Voucher")," -- if set, the customer will receive\ntwo receipts for Card transactions. One will have the card payment\ndetails, the other will be the normal receipt. If this is not set, the\ncustomer will receive a single receipt with all information."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Always print Merchant Voucher")," -- printing a merchant copy is\nnormally only carried out in exception circumstances. If this flag is\nset, a merchant copy will always be printed."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Card Tender Return")," -- this sets the rule for how the card number\nshould be validated on with-receipt card returns. It may be to any card,\nto any card that was used in the original transaction, or only to the\nsame card as originally used."),(0,r.kt)("h3",{id:"cheque-tender"},"Cheque Tender"),(0,r.kt)("p",null,"Cheque tender settings are broadly in four areas:"),(0,r.kt)("p",null,"These settings are used when cheques are automatically printed by the\nPOS:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Graphical user interface, application Description automatically generated with medium confidence",src:n(13639).Z,width:"1340",height:"310"})),(0,r.kt)("p",null,"These settings are used to control how cheque guarantee cards are\nvalidated:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Background pattern Description automatically generated with low confidence",src:n(89826).Z,width:"1366",height:"176"})),(0,r.kt)("p",null,"These settings are used to control how any online cheque authorisation\nis handled, including floor limit rules:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Graphical user interface, application Description automatically generated",src:n(98505).Z,width:"1358",height:"402"})),(0,r.kt)("p",null,"The remaining settings are used to control how much cheque information\nshould be captured (when cheque MICR reading is not used):"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Graphical user interface, application Description automatically generated",src:n(55178).Z,width:"1260",height:"440"})))}p.isMDXComponent=!0},3231:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/image1-02e620dcb0a2eabaa22b38d7a5987ab1.png"},98505:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/image10-3d4c5584d830b224ae2d2983538258e6.png"},55178:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/image11-114d87303db2866c9dea45f59ddf230f.png"},25037:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/image2-da05f414df8e434a2baa493ad9ab2efe.png"},98288:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/image3-d95a2f536c25a37fe0eea00b39964763.png"},10347:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/image4-cae32e5ba36c7c822594ec08476f2310.png"},34660:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/image5-cd1b08a461b731ec909a5a956c4c0d74.png"},14589:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/image6-770f554997dc1afa0e0efa64f832c6db.png"},9594:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/image7-343eb1fe0038398c11ce49a32d16969e.png"},13639:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/image8-ceeb79202ff603acf169e3b71a85199f.png"},89826:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/image9-6c21509369034a32794925bdbdc1a240.png"}}]);